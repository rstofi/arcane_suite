schema_version: 1.1.0

#=== General
# General pipeline information, including data IDs, and prefixes for output files.
general:
  title: 'Crosscal template'
  msdir: 
  rawdatadir: 
  output: 
  prefix: 'crosscal'

#=== Getdata
# Download and/or convert/unarchive data so that it is in the measurement set
# (MS) format for further processing.
getdata:
  dataid: ['']
  extension: ms

#=== Obsconf
# Set up some basic information about the observation(s).
obsconf:
  obsinfo:
    enable: true
    listobs: true
    plotelev:
      enable: true
      #plotter: owlcat #makes better plots than plotms
      plotter: plotms
  #Pre-set the only working calibrator for L-band data
  target: ['1934-638']
  gcal: ['1934-638']
  fcal: ['1934-638']
  bpcal: ['1934-638']
  xcal: ['1934-638']
  refant: 'm008' #I shall select m008 as advised in some online config file

#=== Transform
transform:
  enable: true
  field: calibrators
  label_out: cal
  split_field:
    enable: true
    col: data

#=== Prep
prep:
  enable: true
  label_in: cal
  field: calibrators
  specweights:
    enable: true
    mode: uniform

#=== Flag
flag:
  enable: true
  field: calibrators
  label_in: cal
  flag_autocorr:
    enable: true
  flag_time:
    enable: false
  flag_spw:
    enable: true
    chans: '*:856~880MHz , *:1658~1800MHz, *:1419.8~1421.3MHz'
    ensure_valid: false
  flag_antennas:
    enable: false
  flag_mask:
    enable: true
    mask: meerkat.rfimask.npy
  flag_rfi:
    enable: true
    #Basic tricolour strategy is set for flagging calibrators
    flagger: tricolour

#=== Crosscal
crosscal:
  enable: true
  uvrange: '>150'
  label_in: 'cal'
  label_cal: '1gc1'
  set_model:
    enable: true
    meerkat_skymodel: true
  primary:
    reuse_existing_gains: true
    order: KGBAKGGGB
    combine: ["", "", "", null, "","", "","", scan]
    solint: [inf, inf, inf, null, 20s, 2s, 2s, 2s, inf]
    calmode: [a, ap, ap, null, a, p, p, ap, ap]
    b_fillgaps: 70
    plotgains: true
  secondary:
    #We use the primary calibrator as secondary calibrator
    order: KGAKF
    apply: B
    combine: ["", "", null, "", ""]
    solint: [inf, inf, null, 2s, inf]
    calmode: [a, ap, null, a, ap]
    plotgains: true
  apply_cal:
    applyto:
      - gcal
      - bpcal

#=== Inspect
inspect:
  enable: true
  label_in: 'cal'
  field: 'calibrators'
  label_plot: '1gc'
  dirname: crosscal
  real_imag:
    enable: true
    avgtime: '10'
    avgchan: '16'
  amp_phase:
    enable: true
    avgtime: '10'
    avgchan: '16'
  amp_uvwave:
    enable: true
    avgtime: '10'
    avgchan: '16'
  amp_ant:
    enable: true
    avgtime: '10'
    avgchan: '16'
  phase_uvwave:
    enable: true
    avgtime: '10'
    avgchan: '16'
  amp_scan:
    enable: true
    avgtime: '10'
    avgchan: '16'
  shadems:
    enable: true
    default_column: CORRECTED_DATA
    plots:
      # per-field plots
      - desc: "plots by field"
        field: "{all_fields}"
        cnum: 100  # up 100 colours
        iter_field: true
        plots:
          # phaseball plots
          - dir: "phaseballs-{msbase}"
            plots:
              - "-x real -y imag -c CORR --corr IQUV --hline 0: --vline 0:"
              - "-x real -y imag -c SCAN_NUMBER"
              - "-x real -y imag -c ANTENNA1"
          - dir: "phaseballs-bycorr-{msbase}"
            iter_corr:
            plots:
              - "-x real -y imag -c SCAN_NUMBER"
              - "-x real -y imag -c ANTENNA1"
          # normalized phaseballs
          - dir: "normballs-{msbase}"
            col: "CORRECTED_DATA/MODEL_DATA"
            corr: "XX,YY"
            iter_corr:
            plots:
              - "-x real -y imag -c SCAN_NUMBER"
              - "-x real -y imag -c ANTENNA1"
          # block and triangle plots
          - dir: "blockplots-{msbase}"
            plots:
              - "-x BASELINE_M -y FREQ -c amp"
              - "-x ANTENNA1 -y ANTENNA2 -c SCAN_NUMBER --aaxis phase --ared std"
              - "-x ANTENNA1 -y ANTENNA2 -c SCAN_NUMBER --aaxis amp --ared mean"
          # amp/phase versus uv-distance, and uv-coverage coloured by amp/phase
          - dir: "uvdist-{msbase}"
            plots:
              - "-x UV -y amp    -c SCAN_NUMBER"
              - "-x UV -y amp    -c ANTENNA1"
              - "-x UV -y phase  -c ANTENNA1 --corr XX,YY"
              - "-x U  -y V      -c amp"
              - "-x U  -y V      -c phase --cmin -5 --cmax 5"
          # spectral plots
          - dir: "spectra-{msbase}"
            plots:
              - "-x FREQ  -y amp  -c SCAN_NUMBER"
              - "-x FREQ  -y amp  -c ANTENNA1"
              - "-x FREQ  -y real -c CORR --corr IQUV --hline 0:"
      # per-antenna plots
      - iter_ant:
        desc: "plots by antenna"
        cmap: pride
        corr: XX,YY
        plots:
          - '-x FREQ -y amp:I -c SCAN_NUMBER --cnum 100 --cmin 0 --cmax 30 --field {bpcal} --dir bpcal-iamp-byant-{msbase}'
          - '-x FREQ -y SCAN_NUMBER -a amp --ared std --dir stdamp-byant-{msbase}'
          - '-x FREQ -y SCAN_NUMBER -a phase --ared std --dir stdphase-byant-{msbase}'
      # per-scan plots
      - iter_scan:
        desc: "plots by scan"
        cmap: pride
        ared: std
        corr: XX,YY
        plots:
          - '-x ANTENNA1 -y ANTENNA2 -a amp --dir stdamp-byscan-{msbase}'
          - '-x ANTENNA1 -y ANTENNA2 -a phase --dir stdphase-byscan-{msbase}'
          - '-x BASELINE_M -y FREQ -a imag --amin 0 --amax 2 --dir stdimag-byscan-{msbase}'
    ignore_errors: true
  report: true



