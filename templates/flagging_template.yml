schema_version: 1.1.0

#=== General
# General pipeline information, including data IDs, and prefixes for output files.
general:
  title: 'Flag template'
  msdir: 
  rawdatadir: 
  output: 
  prefix: 'pre_OTF_flagging'

#=== Getdata
# Download and/or convert/unarchive data so that it is in the measurement set
# (MS) format for further processing.
getdata:
  dataid: [""] #The MS name I think
  extension: ms

#=== Obsconf
# Set up some basic information about the observation(s).
obsconf:
  obsinfo:  #This is for me to get a summary of the ms and understand the data
    enable: true
    listobs: true
    plotelev:
      enable: false
      plotter: plotms #Stick to the things I trust the most and know abot...
  #I image all fields
  target: ['scan_azel_with_nd_trigger']
  #Set the target fields for calibration
  gcal: ['scan_azel_with_nd_trigger']
  fcal: ['scan_azel_with_nd_trigger']
  bpcal: ['scan_azel_with_nd_trigger']
  xcal: ['scan_azel_with_nd_trigger']
  refant: 'm008' #I shall select m008 as advised in some online config file, if m008 is not in the MS, use m009!

transform:
  enable: true
  field: target
  label_out: allflag
  split_field:
    enable: true
    col: data

prep:
  enable: true
  label_in: allflag
  field: target
  specweights:
    enable: true
    mode: uniform

flag:
  enable: true
  field: target
  label_in: allflag
  flag_autocorr:
    enable: true
  flag_spw:
    enable: true
    chans: '*:856~880MHz , *:1658~1800MHz, *:1419.8~1421.3MHz'
    ensure_valid: false
  flag_time:
    enable: false
  flag_antennas:
    enable: false
  flag_mask:
    enable: true
    mask: meerkat.rfimask.npy
    uvrange: '' #Flag all baselines
  flag_rfi:
    enable: true
    flagger: tricolour #I use the default parameters designed to flag calibrator sources
    tricolour:
      mode: manual
      strategy: gorbachev.yaml
